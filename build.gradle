plugins {
    id 'java'
    id 'application'
}

// Java 11 (compatível com seu projeto/Jadex)
java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    // Se preferir travar a ferramenta também:
    // toolchain {
    //     languageVersion = JavaLanguageVersion.of(11)
    // }
}

repositories {
    // Para sua combinação atual, mavenCentral tem funcionado.
    // Se em algum ambiente faltar o artefato do Jadex, adicione:
    // maven { url = uri('https://nexus.actoron.com/content/repositories/jadex/') }
    mavenCentral()
}

dependencies {
    // Jadex (standard distribution)
    implementation 'org.activecomponents.jadex:jadex-distribution-standard:4.0.241'

    // Gson
    implementation 'com.google.code.gson:gson:2.10.1'
}

application {
    // Ponto de entrada
    mainClass = 'com.unieuro.main.Main'

    // Garante runtime em UTF-8 (conserta acentos no console)
    applicationDefaultJvmArgs = ['-Dfile.encoding=UTF-8']
}

// Compilação em UTF-8 (evita mojibake em strings do código-fonte)
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

// Execução: mantém STDIN para os prompts e desliga a shell do Jadex
tasks.named('run', JavaExec) {
    standardInput = System.in
    // Desativa shell interativa do Jadex (mantém logs limpos)
    systemProperty 'jadex.shell', 'false'

    // NÃO precisamos repetir -Dfile.encoding aqui porque já está em applicationDefaultJvmArgs.
    // Se quiser forçar mais args, pode usar:
    // jvmArgs += []
}
