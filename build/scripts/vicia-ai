#!/bin/sh

#
# Copyright © 2015-2021 the original authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

##############################################################################
#
#   vicia-ai start up script for POSIX generated by Gradle.
#
#   Important for running:
#
#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is
#       noncompliant, but you have some other compliant shell such as ksh or
#       bash, then to run this script, type that shell name before the whole
#       command line, like:
#
#           ksh vicia-ai
#
#       Busybox and similar reduced shells will NOT work, because this script
#       requires all of these POSIX shell features:
#         * functions;
#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,
#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;
#         * compound commands having a testable exit status, especially «case»;
#         * various built-in commands including «command», «set», and «ulimit».
#
#   Important for patching:
#
#   (2) This script targets any POSIX shell, so it avoids extensions provided
#       by Bash, Ksh, etc; in particular arrays are avoided.
#
#       The "traditional" practice of packing multiple parameters into a
#       space-separated string is a well documented source of bugs and security
#       problems, so this is (mostly) avoided, by progressively accumulating
#       options in "$@", and eventually passing that to Java.
#
#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,
#       and VICIA_AI_OPTS) rely on word-splitting, this is performed explicitly;
#       see the in-line comments for details.
#
#       There are tweaks for specific operating systems such as AIX, CygWin,
#       Darwin, MinGW, and NonStop.
#
#   (3) This script is generated from the Groovy template
#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt
#       within the Gradle project.
#
#       You can find Gradle at https://github.com/gradle/gradle/.
#
##############################################################################

# Attempt to set APP_HOME

# Resolve links: $0 may be a link
app_path=$0

# Need this for daisy-chained symlinks.
while
    APP_HOME=${app_path%"${app_path##*/}"}  # leaves a trailing /; empty if no leading path
    [ -h "$app_path" ]
do
    ls=$( ls -ld "$app_path" )
    link=${ls#*' -> '}
    case $link in             #(
      /*)   app_path=$link ;; #(
      *)    app_path=$APP_HOME$link ;;
    esac
done

# This is normally unused
# shellcheck disable=SC2034
APP_BASE_NAME=${0##*/}
APP_HOME=$( cd "${APP_HOME:-./}.." && pwd -P ) || exit

# Add default JVM options here. You can also use JAVA_OPTS and VICIA_AI_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS=""

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD=maximum

warn () {
    echo "$*"
} >&2

die () {
    echo
    echo "$*"
    echo
    exit 1
} >&2

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
nonstop=false
case "$( uname )" in                #(
  CYGWIN* )         cygwin=true  ;; #(
  Darwin* )         darwin=true  ;; #(
  MSYS* | MINGW* )  msys=true    ;; #(
  NONSTOP* )        nonstop=true ;;
esac

CLASSPATH=$APP_HOME/lib/vicia-ai.jar:$APP_HOME/lib/jadex-distribution-standard-4.0.241.jar:$APP_HOME/lib/gson-2.10.1.jar:$APP_HOME/lib/jadex-platform-webservice-jetty-4.0.241.jar:$APP_HOME/lib/jadex-platform-webservice-websocket-4.0.241.jar:$APP_HOME/lib/jadex-distribution-minimal-4.0.241.jar:$APP_HOME/lib/jadex-tools-bdi-4.0.241.jar:$APP_HOME/lib/jadex-tools-bpmn-4.0.241.jar:$APP_HOME/lib/jadex-tools-runtimetools-swing-4.0.241.jar:$APP_HOME/lib/jadex-tools-runtimetools-web-4.0.241.jar:$APP_HOME/lib/jadex-applications-applib-bdi-4.0.241.jar:$APP_HOME/lib/jadex-tools-comanalyzer-4.0.241.jar:$APP_HOME/lib/jadex-rules-tools-4.0.241.jar:$APP_HOME/lib/jadex-environment-agr-4.0.241.jar:$APP_HOME/lib/jadex-environment-envsupport-4.0.241.jar:$APP_HOME/lib/jadex-platform-webservice-grizzly-4.0.241.jar:$APP_HOME/lib/jadex-platform-webservice-4.0.241.jar:$APP_HOME/lib/jadex-kernel-microservice-4.0.241.jar:$APP_HOME/lib/jadex-platform-base-4.0.241.jar:$APP_HOME/lib/jadex-transport-tcp-4.0.241.jar:$APP_HOME/lib/jadex-transport-relay-4.0.241.jar:$APP_HOME/lib/jadex-transport-websocket-4.0.241.jar:$APP_HOME/lib/jadex-transport-base-4.0.241.jar:$APP_HOME/lib/jadex-kernel-bdiv3-4.0.241.jar:$APP_HOME/lib/jadex-kernel-bpmn-4.0.241.jar:$APP_HOME/lib/jadex-kernel-application-4.0.241.jar:$APP_HOME/lib/jadex-kernel-component-4.0.241.jar:$APP_HOME/lib/jadex-kernel-micro-4.0.241.jar:$APP_HOME/lib/jadex-tools-base-swing-4.0.241.jar:$APP_HOME/lib/bootstrap-3.4.1.jar:$APP_HOME/lib/jquery-3.5.1.jar:$APP_HOME/lib/angular-route-1.5.1.jar:$APP_HOME/lib/angular-1.5.1.jar:$APP_HOME/lib/jadex-rules-base-4.0.241.jar:$APP_HOME/lib/jadex-editor-bpmn-4.0.241.jar:$APP_HOME/lib/jadex-kernel-model-bpmn-4.0.241.jar:$APP_HOME/lib/jadex-serialization-xml-4.0.241.jar:$APP_HOME/lib/jadex-util-gui-4.0.241.jar:$APP_HOME/lib/jadex-kernel-base-4.0.241.jar:$APP_HOME/lib/jadex-tools-base-4.0.241.jar:$APP_HOME/lib/jadex-platform-bridge-4.0.241.jar:$APP_HOME/lib/jadex-rules-eca-4.0.241.jar:$APP_HOME/lib/jadex-util-javaparser-4.0.241.jar:$APP_HOME/lib/jadex-serialization-json-4.0.241.jar:$APP_HOME/lib/jadex-util-security-4.0.241.jar:$APP_HOME/lib/jadex-util-concurrent-4.0.241.jar:$APP_HOME/lib/jadex-serialization-binary-4.0.241.jar:$APP_HOME/lib/jadex-serialization-traverser-4.0.241.jar:$APP_HOME/lib/jadex-util-bytecode-4.0.241.jar:$APP_HOME/lib/jadex-util-commons-4.0.241.jar:$APP_HOME/lib/mail-1.4.5.jar:$APP_HOME/lib/smackx-3.1.0.jar:$APP_HOME/lib/smack-3.1.0.jar:$APP_HOME/lib/jfreechart-1.0.12.jar:$APP_HOME/lib/jcommon-1.0.15.jar:$APP_HOME/lib/jung-visualization-2.0.1.jar:$APP_HOME/lib/jung-graph-impl-2.0.1.jar:$APP_HOME/lib/jung-algorithms-2.0.1.jar:$APP_HOME/lib/jung-api-2.0.1.jar:$APP_HOME/lib/colt-1.2.0.jar:$APP_HOME/lib/collections-generic-4.01.jar:$APP_HOME/lib/jersey-container-grizzly2-http-2.11.jar:$APP_HOME/lib/jersey-server-2.11.jar:$APP_HOME/lib/jersey-client-2.11.jar:$APP_HOME/lib/jersey-media-moxy-2.11.jar:$APP_HOME/lib/jersey-entity-filtering-2.11.jar:$APP_HOME/lib/javax.ws.rs-api-2.0.jar:$APP_HOME/lib/javassist-3.12.1.GA.jar:$APP_HOME/lib/websocket-server-9.4.19.v20190610.jar:$APP_HOME/lib/jetty-servlet-9.4.19.v20190610.jar:$APP_HOME/lib/jetty-security-9.4.19.v20190610.jar:$APP_HOME/lib/jetty-server-9.4.19.v20190610.jar:$APP_HOME/lib/websocket-servlet-9.4.19.v20190610.jar:$APP_HOME/lib/javax.servlet-api-3.1.0.jar:$APP_HOME/lib/jersey-media-multipart-2.11.jar:$APP_HOME/lib/jersey-common-2.28.jar:$APP_HOME/lib/jaxws-api-2.3.1.jar:$APP_HOME/lib/rt-2.3.2.jar:$APP_HOME/lib/grizzly-http-servlet-2.3.22.jar:$APP_HOME/lib/grizzly-http-server-multipart-2.3.16.jar:$APP_HOME/lib/grizzly-http-server-2.3.22.jar:$APP_HOME/lib/commons-daemon-1.0.10.jar:$APP_HOME/lib/xz-1.5.jar:$APP_HOME/lib/nano-cuckoo-1.0.0.jar:$APP_HOME/lib/lz4-1.3.0.jar:$APP_HOME/lib/snappy-java-1.1.2.6.jar:$APP_HOME/lib/eddsa-0.2.0.jar:$APP_HOME/lib/nanohttpd-websocket-2.3.1.jar:$APP_HOME/lib/nv-websocket-client-2.3.jar:$APP_HOME/lib/Java-WebSocket-1.3.5.jar:$APP_HOME/lib/antlr-runtime-3.1.3.jar:$APP_HOME/lib/junit-4.11.jar:$APP_HOME/lib/opentracing-mock-0.33.0.jar:$APP_HOME/lib/opentracing-util-0.33.0.jar:$APP_HOME/lib/opentracing-noop-0.33.0.jar:$APP_HOME/lib/opentracing-api-0.33.0.jar:$APP_HOME/lib/asm-util-6.2.1.jar:$APP_HOME/lib/asm-analysis-6.2.1.jar:$APP_HOME/lib/asm-tree-6.2.1.jar:$APP_HOME/lib/asm-6.2.1.jar:$APP_HOME/lib/activation-1.1.jar:$APP_HOME/lib/jgraphx-3.4.1.3.jar:$APP_HOME/lib/batik-codec-1.8.jar:$APP_HOME/lib/xmlgraphics-commons-2.1.jar:$APP_HOME/lib/asm-all-5.0.3.jar:$APP_HOME/lib/concurrent-1.3.4.jar:$APP_HOME/lib/minimal-json-0.9.4.jar:$APP_HOME/lib/jakarta.ws.rs-api-2.1.5.jar:$APP_HOME/lib/jakarta.xml.ws-api-2.3.2.jar:$APP_HOME/lib/jakarta.annotation-api-1.3.4.jar:$APP_HOME/lib/jakarta.inject-2.5.0.jar:$APP_HOME/lib/osgi-resource-locator-1.0.1.jar:$APP_HOME/lib/jaxb-api-2.3.1.jar:$APP_HOME/lib/javax.xml.soap-api-1.4.0.jar:$APP_HOME/lib/javax.annotation-api-1.3.2.jar:$APP_HOME/lib/jaxb-runtime-2.3.2.jar:$APP_HOME/lib/streambuffer-1.5.7.jar:$APP_HOME/lib/saaj-impl-1.5.1.jar:$APP_HOME/lib/stax-ex-1.8.1.jar:$APP_HOME/lib/jakarta.xml.bind-api-2.3.2.jar:$APP_HOME/lib/istack-commons-runtime-3.0.8.jar:$APP_HOME/lib/jakarta.activation-api-1.2.1.jar:$APP_HOME/lib/policy-2.7.6.jar:$APP_HOME/lib/gmbal-4.0.0.jar:$APP_HOME/lib/pfl-tf-tools-4.0.1.jar:$APP_HOME/lib/pfl-tf-4.0.1.jar:$APP_HOME/lib/mimepull-1.9.11.jar:$APP_HOME/lib/woodstox-core-5.1.0.jar:$APP_HOME/lib/stax2-api-4.1.jar:$APP_HOME/lib/ha-api-3.1.12.jar:$APP_HOME/lib/jakarta.xml.soap-api-1.4.1.jar:$APP_HOME/lib/jakarta.jws-api-1.1.1.jar:$APP_HOME/lib/javax.websocket-api-1.1.jar:$APP_HOME/lib/websocket-client-9.4.19.v20190610.jar:$APP_HOME/lib/jetty-client-9.4.19.v20190610.jar:$APP_HOME/lib/jetty-http-9.4.19.v20190610.jar:$APP_HOME/lib/websocket-common-9.4.19.v20190610.jar:$APP_HOME/lib/jetty-io-9.4.19.v20190610.jar:$APP_HOME/lib/grizzly-http-2.3.22.jar:$APP_HOME/lib/grizzly-framework-2.3.22.jar:$APP_HOME/lib/hk2-locator-2.3.0-b05.jar:$APP_HOME/lib/javax.inject-2.3.0-b05.jar:$APP_HOME/lib/hk2-api-2.3.0-b05.jar:$APP_HOME/lib/org.eclipse.persistence.moxy-2.5.0.jar:$APP_HOME/lib/org.eclipse.persistence.antlr-2.5.0.jar:$APP_HOME/lib/bcpkix-jdk15on-1.59.jar:$APP_HOME/lib/bcprov-jdk15on-1.59.jar:$APP_HOME/lib/jna-platform-4.5.2.jar:$APP_HOME/lib/jna-4.5.2.jar:$APP_HOME/lib/nanohttpd-2.3.1.jar:$APP_HOME/lib/stringtemplate-3.2.jar:$APP_HOME/lib/hamcrest-core-1.3.jar:$APP_HOME/lib/batik-transcoder-1.8.jar:$APP_HOME/lib/batik-bridge-1.8.jar:$APP_HOME/lib/batik-script-1.8.jar:$APP_HOME/lib/batik-anim-1.8.jar:$APP_HOME/lib/batik-gvt-1.8.jar:$APP_HOME/lib/batik-svg-dom-1.8.jar:$APP_HOME/lib/batik-parser-1.8.jar:$APP_HOME/lib/batik-svggen-1.8.jar:$APP_HOME/lib/batik-awt-util-1.8.jar:$APP_HOME/lib/batik-dom-1.8.jar:$APP_HOME/lib/batik-css-1.8.jar:$APP_HOME/lib/batik-xml-1.8.jar:$APP_HOME/lib/batik-util-1.8.jar:$APP_HOME/lib/commons-io-1.3.1.jar:$APP_HOME/lib/commons-logging-1.0.4.jar:$APP_HOME/lib/javax.activation-api-1.2.0.jar:$APP_HOME/lib/txw2-2.3.2.jar:$APP_HOME/lib/FastInfoset-1.2.16.jar:$APP_HOME/lib/management-api-3.2.1.jar:$APP_HOME/lib/pfl-basic-tools-4.0.1.jar:$APP_HOME/lib/pfl-dynamic-4.0.1.jar:$APP_HOME/lib/pfl-basic-4.0.1.jar:$APP_HOME/lib/pfl-asm-4.0.1.jar:$APP_HOME/lib/jetty-xml-9.4.19.v20190610.jar:$APP_HOME/lib/jetty-util-9.4.19.v20190610.jar:$APP_HOME/lib/websocket-api-9.4.19.v20190610.jar:$APP_HOME/lib/validation-api-1.1.0.Final.jar:$APP_HOME/lib/hk2-utils-2.3.0-b05.jar:$APP_HOME/lib/aopalliance-repackaged-2.3.0-b05.jar:$APP_HOME/lib/javassist-3.18.1-GA.jar:$APP_HOME/lib/org.eclipse.persistence.core-2.5.0.jar:$APP_HOME/lib/antlr-2.7.7.jar:$APP_HOME/lib/batik-ext-1.8.jar:$APP_HOME/lib/xalan-2.7.0.jar:$APP_HOME/lib/xml-apis-ext-1.3.04.jar:$APP_HOME/lib/javax.inject-1.jar:$APP_HOME/lib/org.eclipse.persistence.asm-2.5.0.jar


# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD=$JAVA_HOME/jre/sh/java
    else
        JAVACMD=$JAVA_HOME/bin/java
    fi
    if [ ! -x "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
else
    JAVACMD=java
    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
fi

# Increase the maximum file descriptors if we can.
if ! "$cygwin" && ! "$darwin" && ! "$nonstop" ; then
    case $MAX_FD in #(
      max*)
        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.
        # shellcheck disable=SC3045 
        MAX_FD=$( ulimit -H -n ) ||
            warn "Could not query maximum file descriptor limit"
    esac
    case $MAX_FD in  #(
      '' | soft) :;; #(
      *)
        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.
        # shellcheck disable=SC3045 
        ulimit -n "$MAX_FD" ||
            warn "Could not set maximum file descriptor limit to $MAX_FD"
    esac
fi

# Collect all arguments for the java command, stacking in reverse order:
#   * args from the command line
#   * the main class name
#   * -classpath
#   * -D...appname settings
#   * --module-path (only if needed)
#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and VICIA_AI_OPTS environment variables.

# For Cygwin or MSYS, switch paths to Windows format before running java
if "$cygwin" || "$msys" ; then
    APP_HOME=$( cygpath --path --mixed "$APP_HOME" )
    CLASSPATH=$( cygpath --path --mixed "$CLASSPATH" )

    JAVACMD=$( cygpath --unix "$JAVACMD" )

    # Now convert the arguments - kludge to limit ourselves to /bin/sh
    for arg do
        if
            case $arg in                                #(
              -*)   false ;;                            # don't mess with options #(
              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath
                    [ -e "$t" ] ;;                      #(
              *)    false ;;
            esac
        then
            arg=$( cygpath --path --ignore --mixed "$arg" )
        fi
        # Roll the args list around exactly as many times as the number of
        # args, so each arg winds up back in the position where it started, but
        # possibly modified.
        #
        # NB: a `for` loop captures its iteration list before it begins, so
        # changing the positional parameters here affects neither the number of
        # iterations, nor the values presented in `arg`.
        shift                   # remove old arg
        set -- "$@" "$arg"      # push replacement arg
    done
fi

# Collect all arguments for the java command;
#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $VICIA_AI_OPTS can contain fragments of
#     shell script including quotes and variable substitutions, so put them in
#     double quotes to make sure that they get re-expanded; and
#   * put everything else in single quotes, so that it's not re-expanded.

set -- \
        -classpath "$CLASSPATH" \
        com.unieuro.main.Main \
        "$@"

# Stop when "xargs" is not available.
if ! command -v xargs >/dev/null 2>&1
then
    die "xargs is not available"
fi

# Use "xargs" to parse quoted args.
#
# With -n1 it outputs one arg per line, with the quotes and backslashes removed.
#
# In Bash we could simply go:
#
#   readarray ARGS < <( xargs -n1 <<<"$var" ) &&
#   set -- "${ARGS[@]}" "$@"
#
# but POSIX shell has neither arrays nor command substitution, so instead we
# post-process each arg (as a line of input to sed) to backslash-escape any
# character that might be a shell metacharacter, then use eval to reverse
# that process (while maintaining the separation between arguments), and wrap
# the whole thing up as a single "set" statement.
#
# This will of course break if any of these variables contains a newline or
# an unmatched quote.
#

eval "set -- $(
        printf '%s\n' "$DEFAULT_JVM_OPTS $JAVA_OPTS $VICIA_AI_OPTS" |
        xargs -n1 |
        sed ' s~[^-[:alnum:]+,./:=@_]~\\&~g; ' |
        tr '\n' ' '
    )" '"$@"'

exec "$JAVACMD" "$@"
